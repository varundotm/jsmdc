<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="11" ignored="12" total="207" passed="184">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1008116" started-at="2019-01-08T10:23:00Z" finished-at="2019-01-08T10:39:48Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="1008116" started-at="2019-01-08T10:23:00Z" finished-at="2019-01-08T10:39:48Z">
      <class name="scripts.CartOperTest">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="setup" is-config="true" duration-ms="6113" started-at="2019-01-08T10:23:00Z" finished-at="2019-01-08T10:23:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="navigatetoregister()[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="navigatetoregister" duration-ms="2350" started-at="2019-01-08T10:23:06Z" finished-at="2019-01-08T10:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatetoregister -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:23:08Z" finished-at="2019-01-08T10:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigatetoregister status=SUCCESS method=RegisterAsIndividual.navigatetoregister()[pri:0, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateNameofBuyer()[pri:1, instance:scripts.CartOperTest@6b9651f3]" name="validateNameofBuyer" duration-ms="5393" started-at="2019-01-08T10:23:08Z" finished-at="2019-01-08T10:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNameofBuyer -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:14Z" finished-at="2019-01-08T10:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNameofBuyer status=SUCCESS method=RegisterAsIndividual.validateNameofBuyer()[pri:1, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateAddress()[pri:2, instance:scripts.CartOperTest@6b9651f3]" name="validateAddress" duration-ms="8479" started-at="2019-01-08T10:23:14Z" finished-at="2019-01-08T10:23:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddress -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:22Z" finished-at="2019-01-08T10:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddress status=SUCCESS method=RegisterAsIndividual.validateAddress()[pri:2, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateMobile()[pri:4, instance:scripts.CartOperTest@6b9651f3]" name="validateMobile" duration-ms="8453" started-at="2019-01-08T10:23:22Z" finished-at="2019-01-08T10:23:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:31Z" finished-at="2019-01-08T10:23:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMobile status=SUCCESS method=RegisterAsIndividual.validateMobile()[pri:4, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateInvalidMobile()[pri:5, instance:scripts.CartOperTest@6b9651f3]" name="validateInvalidMobile" duration-ms="6725" started-at="2019-01-08T10:23:31Z" finished-at="2019-01-08T10:23:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:37Z" finished-at="2019-01-08T10:23:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInvalidMobile status=SUCCESS method=RegisterAsIndividual.validateInvalidMobile()[pri:5, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validatewithoutOTP()[pri:6, instance:scripts.CartOperTest@6b9651f3]" name="validatewithoutOTP" duration-ms="6681" started-at="2019-01-08T10:23:37Z" finished-at="2019-01-08T10:23:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatewithoutOTP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:44Z" finished-at="2019-01-08T10:23:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatewithoutOTP status=SUCCESS method=RegisterAsIndividual.validatewithoutOTP()[pri:6, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validatewithInvalidOTP()[pri:7, instance:scripts.CartOperTest@6b9651f3]" name="validatewithInvalidOTP" duration-ms="6665" started-at="2019-01-08T10:23:44Z" finished-at="2019-01-08T10:23:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatewithInvalidOTP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:51Z" finished-at="2019-01-08T10:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatewithInvalidOTP status=SUCCESS method=RegisterAsIndividual.validatewithInvalidOTP()[pri:7, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validatevillage()[pri:8, instance:scripts.CartOperTest@6b9651f3]" name="validatevillage" duration-ms="6680" started-at="2019-01-08T10:23:51Z" finished-at="2019-01-08T10:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatevillage -->
        <test-method status="PASS" signature="validateWithOutPinCode()[pri:9, instance:scripts.CartOperTest@6b9651f3]" name="validateWithOutPinCode" duration-ms="6733" started-at="2019-01-08T10:23:58Z" finished-at="2019-01-08T10:24:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithOutPinCode -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:23:58Z" finished-at="2019-01-08T10:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatevillage status=SUCCESS method=RegisterAsIndividual.validatevillage()[pri:8, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:04Z" finished-at="2019-01-08T10:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithOutPinCode status=SUCCESS method=RegisterAsIndividual.validateWithOutPinCode()[pri:9, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithInvalidPinCode()[pri:10, instance:scripts.CartOperTest@6b9651f3]" name="validateWithInvalidPinCode" duration-ms="6732" started-at="2019-01-08T10:24:04Z" finished-at="2019-01-08T10:24:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithInvalidPinCode -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:11Z" finished-at="2019-01-08T10:24:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithInvalidPinCode status=SUCCESS method=RegisterAsIndividual.validateWithInvalidPinCode()[pri:10, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithoutUserName()[pri:11, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutUserName" duration-ms="6715" started-at="2019-01-08T10:24:11Z" finished-at="2019-01-08T10:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutUserName -->
        <test-method status="PASS" signature="validateWithoutpwd()[pri:12, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutpwd" duration-ms="6680" started-at="2019-01-08T10:24:18Z" finished-at="2019-01-08T10:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutpwd -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:18Z" finished-at="2019-01-08T10:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutUserName status=SUCCESS method=RegisterAsIndividual.validateWithoutUserName()[pri:11, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:24Z" finished-at="2019-01-08T10:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutpwd status=SUCCESS method=RegisterAsIndividual.validateWithoutpwd()[pri:12, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithinvalidpwd()[pri:13, instance:scripts.CartOperTest@6b9651f3]" name="validateWithinvalidpwd" duration-ms="6667" started-at="2019-01-08T10:24:24Z" finished-at="2019-01-08T10:24:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithinvalidpwd -->
        <test-method status="PASS" signature="validateWithoutcnfmpwd()[pri:14, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutcnfmpwd" duration-ms="6651" started-at="2019-01-08T10:24:31Z" finished-at="2019-01-08T10:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutcnfmpwd -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:31Z" finished-at="2019-01-08T10:24:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithinvalidpwd status=SUCCESS method=RegisterAsIndividual.validateWithinvalidpwd()[pri:13, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:38Z" finished-at="2019-01-08T10:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutcnfmpwd status=SUCCESS method=RegisterAsIndividual.validateWithoutcnfmpwd()[pri:14, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithMismatchcnfmpwd()[pri:15, instance:scripts.CartOperTest@6b9651f3]" name="validateWithMismatchcnfmpwd" duration-ms="7910" started-at="2019-01-08T10:24:38Z" finished-at="2019-01-08T10:24:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithMismatchcnfmpwd -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:46Z" finished-at="2019-01-08T10:24:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithMismatchcnfmpwd status=SUCCESS method=RegisterAsIndividual.validateWithMismatchcnfmpwd()[pri:15, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateOtpMismatch()[pri:16, instance:scripts.CartOperTest@6b9651f3]" name="validateOtpMismatch" duration-ms="9670" started-at="2019-01-08T10:24:46Z" finished-at="2019-01-08T10:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOtpMismatch -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:24:55Z" finished-at="2019-01-08T10:24:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOtpMismatch status=SUCCESS method=RegisterAsIndividual.validateOtpMismatch()[pri:16, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="registerWithValidUser()[pri:18, instance:scripts.CartOperTest@6b9651f3]" name="registerWithValidUser" duration-ms="23162" started-at="2019-01-08T10:24:55Z" finished-at="2019-01-08T10:25:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithValidUser -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:25:18Z" finished-at="2019-01-08T10:25:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithValidUser status=SUCCESS method=RegisterAsIndividual.registerWithValidUser()[pri:18, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="aDBSet()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="aDBSet" duration-ms="6462" started-at="2019-01-08T10:25:18Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aDBSet -->
        <test-method status="FAIL" signature="verifyMobile()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyMobile" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at generic.MainActivity.assertActExpect(MainActivity.java:179)
at scripts.RegisterAsIndividual.verifyMobile(RegisterAsIndividual.java:380)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aDBSet status=SUCCESS method=RegisterAsIndividual.aDBSet()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="verifyAddress()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyAddress" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddress -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddress status=SUCCESS method=RegisterAsIndividual.verifyAddress()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="305" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMobile status=FAILURE method=RegisterAsIndividual.verifyMobile()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="verifyemail()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyemail" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyemail -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyemail status=SUCCESS method=RegisterAsIndividual.verifyemail()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="15" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifypan status=SUCCESS method=RegisterAsIndividual.verifypan()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUser status=SUCCESS method=RegisterAsIndividual.verifyUser()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNameWithDB status=SUCCESS method=RegisterAsIndividual.verifyNameWithDB()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="verifyNameWithDB()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyNameWithDB" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNameWithDB -->
        <test-method status="PASS" signature="verifyUser()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyUser" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUser -->
        <test-method status="PASS" signature="verifypan()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifypan" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifypan -->
        <test-method status="PASS" signature="verifypincode()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifypincode" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifypincode -->
        <test-method status="PASS" signature="verifyvillage()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifyvillage" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyvillage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyvillage status=SUCCESS method=RegisterAsIndividual.verifyvillage()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="wNavigateToRegister()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="wNavigateToRegister" duration-ms="2327" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wNavigateToRegister -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:25:25Z" finished-at="2019-01-08T10:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifypincode status=SUCCESS method=RegisterAsIndividual.verifypincode()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:25:28Z" finished-at="2019-01-08T10:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wNavigateToRegister status=SUCCESS method=RegisterAsIndividual.wNavigateToRegister()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="xvalidateMobileAlready()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="xvalidateMobileAlready" duration-ms="6751" started-at="2019-01-08T10:25:28Z" finished-at="2019-01-08T10:25:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at generic.MainActivity.asserAlert(MainActivity.java:94)
at scripts.RegisterAsIndividual.xvalidateMobileAlready(RegisterAsIndividual.java:394)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- xvalidateMobileAlready -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="252" started-at="2019-01-08T10:25:34Z" finished-at="2019-01-08T10:25:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=xvalidateMobileAlready status=FAILURE method=RegisterAsIndividual.xvalidateMobileAlready()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="yavalidateUsernameAlready()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="yavalidateUsernameAlready" duration-ms="27198" started-at="2019-01-08T10:25:35Z" finished-at="2019-01-08T10:26:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at generic.MainActivity.asserAlert(MainActivity.java:94)
at scripts.RegisterAsIndividual.yavalidateUsernameAlready(RegisterAsIndividual.java:426)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- yavalidateUsernameAlready -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="270" started-at="2019-01-08T10:26:02Z" finished-at="2019-01-08T10:26:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=yavalidateUsernameAlready status=FAILURE method=RegisterAsIndividual.yavalidateUsernameAlready()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="zNavigateToLogin()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="zNavigateToLogin" duration-ms="2223" started-at="2019-01-08T10:26:02Z" finished-at="2019-01-08T10:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zNavigateToLogin -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:26:04Z" finished-at="2019-01-08T10:26:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=zNavigateToLogin status=SUCCESS method=RegisterAsIndividual.zNavigateToLogin()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="verifygst()[pri:19, instance:scripts.CartOperTest@6b9651f3]" name="verifygst" duration-ms="0" started-at="2019-01-08T10:26:04Z" finished-at="2019-01-08T10:26:04Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at pages.RegisterPage.getGSTNO(RegisterPage.java:115)
at scripts.RegisterAsIndividual.verifygst(RegisterAsIndividual.java:362)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifygst -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="289" started-at="2019-01-08T10:26:04Z" finished-at="2019-01-08T10:26:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifygst status=FAILURE method=RegisterAsIndividual.verifygst()[pri:19, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToForgotPwd()[pri:20, instance:scripts.CartOperTest@6b9651f3]" name="navigateToForgotPwd" duration-ms="5247" started-at="2019-01-08T10:26:05Z" finished-at="2019-01-08T10:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToForgotPwd -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:26:10Z" finished-at="2019-01-08T10:26:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToForgotPwd status=SUCCESS method=ForgotPassword.navigateToForgotPwd()[pri:20, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithoutUserName()[pri:21, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithoutUserName" duration-ms="5434" started-at="2019-01-08T10:26:10Z" finished-at="2019-01-08T10:26:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithoutUserName -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:26:15Z" finished-at="2019-01-08T10:26:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithoutUserName status=SUCCESS method=ForgotPassword.forgotPasswordwithoutUserName()[pri:21, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithoutNum()[pri:22, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithoutNum" duration-ms="6764" started-at="2019-01-08T10:26:15Z" finished-at="2019-01-08T10:26:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithoutNum -->
        <test-method status="PASS" signature="forgotPasswordwithInvalidMobile()[pri:23, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithInvalidMobile" duration-ms="8066" started-at="2019-01-08T10:26:22Z" finished-at="2019-01-08T10:26:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithInvalidMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:26:22Z" finished-at="2019-01-08T10:26:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithoutNum status=SUCCESS method=ForgotPassword.forgotPasswordwithoutNum()[pri:22, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:26:30Z" finished-at="2019-01-08T10:26:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithInvalidMobile status=SUCCESS method=ForgotPassword.forgotPasswordwithInvalidMobile()[pri:23, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="forgotPasswordwithInvaliddata()[pri:24, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithInvaliddata" duration-ms="10954" started-at="2019-01-08T10:26:30Z" finished-at="2019-01-08T10:26:41Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='swal-text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'T4UBLRLPUSR093', ip: '172.16.2.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\CGN04\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:65145}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 51b3c7fcc4de326992a245af8ea4cc25
*** Element info: {Using=xpath, value=//*[@class='swal-text']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='swal-text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'T4UBLRLPUSR093', ip: '172.16.2.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\CGN04\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:65145}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 51b3c7fcc4de326992a245af8ea4cc25
*** Element info: {Using=xpath, value=//*[@class='swal-text']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at generic.MainActivity.getAlertText(MainActivity.java:261)
at generic.MainActivity.asserAlert(MainActivity.java:90)
at scripts.ForgotPassword.forgotPasswordwithInvaliddata(ForgotPassword.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithInvaliddata -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="283" started-at="2019-01-08T10:26:41Z" finished-at="2019-01-08T10:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithInvaliddata status=FAILURE method=ForgotPassword.forgotPasswordwithInvaliddata()[pri:24, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithValidData()[pri:25, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithValidData" duration-ms="4852" started-at="2019-01-08T10:26:41Z" finished-at="2019-01-08T10:26:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithValidData -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:26:46Z" finished-at="2019-01-08T10:26:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithValidData status=SUCCESS method=ForgotPassword.forgotPasswordwithValidData()[pri:25, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithoutOTP()[pri:26, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithoutOTP" duration-ms="8487" started-at="2019-01-08T10:26:46Z" finished-at="2019-01-08T10:26:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithoutOTP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:26:55Z" finished-at="2019-01-08T10:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithoutOTP status=SUCCESS method=ForgotPassword.forgotPasswordwithoutOTP()[pri:26, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="forgotPasswordwithInvalidOTP()[pri:27, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithInvalidOTP" duration-ms="6617" started-at="2019-01-08T10:26:55Z" finished-at="2019-01-08T10:27:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at generic.MainActivity.asserAlert(MainActivity.java:94)
at scripts.ForgotPassword.forgotPasswordwithInvalidOTP(ForgotPassword.java:99)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithInvalidOTP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="277" started-at="2019-01-08T10:27:01Z" finished-at="2019-01-08T10:27:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithInvalidOTP status=FAILURE method=ForgotPassword.forgotPasswordwithInvalidOTP()[pri:27, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithoutPWD()[pri:28, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithoutPWD" duration-ms="6638" started-at="2019-01-08T10:27:02Z" finished-at="2019-01-08T10:27:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithoutPWD -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:27:08Z" finished-at="2019-01-08T10:27:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithoutPWD status=SUCCESS method=ForgotPassword.forgotPasswordwithoutPWD()[pri:28, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithinvalidPWD()[pri:29, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithinvalidPWD" duration-ms="7966" started-at="2019-01-08T10:27:08Z" finished-at="2019-01-08T10:27:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithinvalidPWD -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:27:16Z" finished-at="2019-01-08T10:27:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithinvalidPWD status=SUCCESS method=ForgotPassword.forgotPasswordwithinvalidPWD()[pri:29, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithoutCnfmPWD()[pri:30, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithoutCnfmPWD" duration-ms="7962" started-at="2019-01-08T10:27:16Z" finished-at="2019-01-08T10:27:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithoutCnfmPWD -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:27:24Z" finished-at="2019-01-08T10:27:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithoutCnfmPWD status=SUCCESS method=ForgotPassword.forgotPasswordwithoutCnfmPWD()[pri:30, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithMissmatchPWD()[pri:31, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithMissmatchPWD" duration-ms="9216" started-at="2019-01-08T10:27:24Z" finished-at="2019-01-08T10:27:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithMissmatchPWD -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:27:33Z" finished-at="2019-01-08T10:27:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithMissmatchPWD status=SUCCESS method=ForgotPassword.forgotPasswordwithMissmatchPWD()[pri:31, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="forgotPasswordwithWrongOTP()[pri:32, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithWrongOTP" duration-ms="12157" started-at="2019-01-08T10:27:33Z" finished-at="2019-01-08T10:27:45Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='swal-text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'T4UBLRLPUSR093', ip: '172.16.2.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\CGN04\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:65145}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 51b3c7fcc4de326992a245af8ea4cc25
*** Element info: {Using=xpath, value=//*[@class='swal-text']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='swal-text']"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'T4UBLRLPUSR093', ip: '172.16.2.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.42.591088 (7b2b2dca23cca0..., userDataDir: C:\Users\CGN04\AppData\Loca...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:65145}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 51b3c7fcc4de326992a245af8ea4cc25
*** Element info: {Using=xpath, value=//*[@class='swal-text']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy13.getText(Unknown Source)
at generic.MainActivity.getAlertText(MainActivity.java:261)
at generic.MainActivity.asserAlert(MainActivity.java:90)
at scripts.ForgotPassword.forgotPasswordwithWrongOTP(ForgotPassword.java:162)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithWrongOTP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="313" started-at="2019-01-08T10:27:45Z" finished-at="2019-01-08T10:27:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithWrongOTP status=FAILURE method=ForgotPassword.forgotPasswordwithWrongOTP()[pri:32, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forgotPasswordwithAllValidDATA()[pri:33, instance:scripts.CartOperTest@6b9651f3]" name="forgotPasswordwithAllValidDATA" duration-ms="14040" started-at="2019-01-08T10:27:46Z" finished-at="2019-01-08T10:28:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordwithAllValidDATA -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:28:00Z" finished-at="2019-01-08T10:28:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordwithAllValidDATA status=SUCCESS method=ForgotPassword.forgotPasswordwithAllValidDATA()[pri:33, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="loginWithoutInput()[pri:40, instance:scripts.CartOperTest@6b9651f3]" name="loginWithoutInput" duration-ms="10435" started-at="2019-01-08T10:28:00Z" finished-at="2019-01-08T10:28:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutInput -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:10Z" finished-at="2019-01-08T10:28:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithoutInput status=SUCCESS method=Login.loginWithoutInput()[pri:40, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="loginWithUsername()[pri:41, instance:scripts.CartOperTest@6b9651f3]" name="loginWithUsername" duration-ms="5782" started-at="2019-01-08T10:28:10Z" finished-at="2019-01-08T10:28:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsername -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:28:16Z" finished-at="2019-01-08T10:28:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithUsername status=SUCCESS method=Login.loginWithUsername()[pri:41, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="loginWithPwd()[pri:42, instance:scripts.CartOperTest@6b9651f3]" name="loginWithPwd" duration-ms="5666" started-at="2019-01-08T10:28:16Z" finished-at="2019-01-08T10:28:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithPwd -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:22Z" finished-at="2019-01-08T10:28:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithPwd status=SUCCESS method=Login.loginWithPwd()[pri:42, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validCredential()[pri:46, instance:scripts.CartOperTest@6b9651f3]" name="validCredential" duration-ms="4790" started-at="2019-01-08T10:28:22Z" finished-at="2019-01-08T10:28:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredential -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:27Z" finished-at="2019-01-08T10:28:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validCredential status=SUCCESS method=Login.validCredential()[pri:46, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateLocationTypoHead()[pri:47, instance:scripts.CartOperTest@6b9651f3]" name="validateLocationTypoHead" duration-ms="2613" started-at="2019-01-08T10:28:27Z" finished-at="2019-01-08T10:28:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLocationTypoHead -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:29Z" finished-at="2019-01-08T10:28:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLocationTypoHead status=SUCCESS method=ConsumerModel.validateLocationTypoHead()[pri:47, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithoutDistrict()[pri:47, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutDistrict" duration-ms="5409" started-at="2019-01-08T10:28:29Z" finished-at="2019-01-08T10:28:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutDistrict -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:35Z" finished-at="2019-01-08T10:28:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutDistrict status=SUCCESS method=ConsumerModel.validateWithoutDistrict()[pri:47, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithoutStoskYard()[pri:48, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutStoskYard" duration-ms="7183" started-at="2019-01-08T10:28:35Z" finished-at="2019-01-08T10:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutStoskYard -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:28:42Z" finished-at="2019-01-08T10:28:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutStoskYard status=SUCCESS method=ConsumerModel.validateWithoutStoskYard()[pri:48, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateWithoutQTY()[pri:49, instance:scripts.CartOperTest@6b9651f3]" name="validateWithoutQTY" duration-ms="14598" started-at="2019-01-08T10:28:42Z" finished-at="2019-01-08T10:28:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithoutQTY -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:28:56Z" finished-at="2019-01-08T10:28:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWithoutQTY status=SUCCESS method=ConsumerModel.validateWithoutQTY()[pri:49, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateDistrict()[pri:50, instance:scripts.CartOperTest@6b9651f3]" name="validateDistrict" duration-ms="525" started-at="2019-01-08T10:28:56Z" finished-at="2019-01-08T10:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDistrict -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:28:57Z" finished-at="2019-01-08T10:28:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDistrict status=SUCCESS method=ConsumerModel.validateDistrict()[pri:50, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateStockyard()[pri:51, instance:scripts.CartOperTest@6b9651f3]" name="validateStockyard" duration-ms="17688" started-at="2019-01-08T10:28:57Z" finished-at="2019-01-08T10:29:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStockyard -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:15Z" finished-at="2019-01-08T10:29:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStockyard status=SUCCESS method=ConsumerModel.validateStockyard()[pri:51, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateAvailableStock_and_uniPrice()[pri:52, instance:scripts.CartOperTest@6b9651f3]" name="validateAvailableStock_and_uniPrice" duration-ms="12284" started-at="2019-01-08T10:29:15Z" finished-at="2019-01-08T10:29:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAvailableStock_and_uniPrice -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:27Z" finished-at="2019-01-08T10:29:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAvailableStock_and_uniPrice status=SUCCESS method=ConsumerModel.validateAvailableStock_and_uniPrice()[pri:52, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1566" started-at="2019-01-08T10:29:27Z" data-provider="vehicle" finished-at="2019-01-08T10:29:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:28Z" finished-at="2019-01-08T10:29:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1580" started-at="2019-01-08T10:29:28Z" data-provider="vehicle" finished-at="2019-01-08T10:29:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:30Z" finished-at="2019-01-08T10:29:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1557" started-at="2019-01-08T10:29:30Z" data-provider="vehicle" finished-at="2019-01-08T10:29:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1565" started-at="2019-01-08T10:29:32Z" data-provider="vehicle" finished-at="2019-01-08T10:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:32Z" finished-at="2019-01-08T10:29:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:33Z" finished-at="2019-01-08T10:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1615" started-at="2019-01-08T10:29:33Z" data-provider="vehicle" finished-at="2019-01-08T10:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:35Z" finished-at="2019-01-08T10:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1585" started-at="2019-01-08T10:29:35Z" data-provider="vehicle" finished-at="2019-01-08T10:29:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:36Z" finished-at="2019-01-08T10:29:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1564" started-at="2019-01-08T10:29:36Z" data-provider="vehicle" finished-at="2019-01-08T10:29:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1555" started-at="2019-01-08T10:29:38Z" data-provider="vehicle" finished-at="2019-01-08T10:29:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:38Z" finished-at="2019-01-08T10:29:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:40Z" finished-at="2019-01-08T10:29:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3]" name="valdtBookingForm" duration-ms="1625" started-at="2019-01-08T10:29:40Z" data-provider="vehicle" finished-at="2019-01-08T10:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- valdtBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valdtBookingForm status=SUCCESS method=ConsumerModel.valdtBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:53, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checktotalQty()[pri:54, instance:scripts.CartOperTest@6b9651f3]" name="checktotalQty" duration-ms="42" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checktotalQty -->
        <test-method status="PASS" signature="dValidatePrice()[pri:54, instance:scripts.CartOperTest@6b9651f3]" name="dValidatePrice" duration-ms="74" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dValidatePrice -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checktotalQty status=SUCCESS method=ConsumerModel.checktotalQty()[pri:54, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="exeedUserlimit()[pri:54, instance:scripts.CartOperTest@6b9651f3]" name="exeedUserlimit" duration-ms="1226" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exeedUserlimit -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:41Z" finished-at="2019-01-08T10:29:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dValidatePrice status=SUCCESS method=ConsumerModel.dValidatePrice()[pri:54, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:42Z" finished-at="2019-01-08T10:29:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exeedUserlimit status=SUCCESS method=ConsumerModel.exeedUserlimit()[pri:54, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="zReset()[pri:54, instance:scripts.CartOperTest@6b9651f3]" name="zReset" duration-ms="1" started-at="2019-01-08T10:29:42Z" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:29:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zReset -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:42Z" finished-at="2019-01-08T10:29:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=zReset status=SUCCESS method=ConsumerModel.zReset()[pri:54, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3725" started-at="2019-01-08T10:29:42Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:29:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3768" started-at="2019-01-08T10:29:46Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:29:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:46Z" finished-at="2019-01-08T10:29:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3832" started-at="2019-01-08T10:29:50Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:50Z" finished-at="2019-01-08T10:29:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3837" started-at="2019-01-08T10:29:54Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:54Z" finished-at="2019-01-08T10:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3843" started-at="2019-01-08T10:29:58Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:30:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:29:58Z" finished-at="2019-01-08T10:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:02Z" finished-at="2019-01-08T10:30:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3794" started-at="2019-01-08T10:30:02Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:05Z" finished-at="2019-01-08T10:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3797" started-at="2019-01-08T10:30:05Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:09Z" finished-at="2019-01-08T10:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="3862" started-at="2019-01-08T10:30:09Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:30:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3]" name="vlidtBookFrm" duration-ms="1584" started-at="2019-01-08T10:30:13Z" data-provider="limit" depends-on-methods="scripts.ConsumerModel.exeedUserlimit" finished-at="2019-01-08T10:30:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlidtBookFrm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:13Z" finished-at="2019-01-08T10:30:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:15Z" finished-at="2019-01-08T10:30:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vlidtBookFrm status=SUCCESS method=ConsumerModel.vlidtBookFrm(java.lang.String, java.lang.String, java.lang.String)[pri:55, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="aCheckPrices()[pri:56, instance:scripts.CartOperTest@6b9651f3]" name="aCheckPrices" duration-ms="2075" started-at="2019-01-08T10:30:15Z" finished-at="2019-01-08T10:30:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aCheckPrices -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:17Z" finished-at="2019-01-08T10:30:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aCheckPrices status=SUCCESS method=ConsumerModel.aCheckPrices()[pri:56, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="aCheckQty()[pri:56, instance:scripts.CartOperTest@6b9651f3]" name="aCheckQty" duration-ms="2045" started-at="2019-01-08T10:30:17Z" finished-at="2019-01-08T10:30:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aCheckQty -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:30:19Z" finished-at="2019-01-08T10:30:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aCheckQty status=SUCCESS method=ConsumerModel.aCheckQty()[pri:56, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToReviewBooking()[pri:56, instance:scripts.CartOperTest@6b9651f3]" name="navigateToReviewBooking" duration-ms="4451" started-at="2019-01-08T10:30:19Z" finished-at="2019-01-08T10:30:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToReviewBooking -->
        <test-method status="PASS" signature="validateRBWithoutLocation()[pri:57, instance:scripts.CartOperTest@6b9651f3]" name="validateRBWithoutLocation" duration-ms="5463" started-at="2019-01-08T10:30:23Z" finished-at="2019-01-08T10:30:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRBWithoutLocation -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:23Z" finished-at="2019-01-08T10:30:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToReviewBooking status=SUCCESS method=ConsumerModel.navigateToReviewBooking()[pri:56, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:30:29Z" finished-at="2019-01-08T10:30:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRBWithoutLocation status=SUCCESS method=ConsumerModel.validateRBWithoutLocation()[pri:57, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateRBWithoutAltnatMobile()[pri:58, instance:scripts.CartOperTest@6b9651f3]" name="validateRBWithoutAltnatMobile" duration-ms="7882" started-at="2019-01-08T10:30:29Z" finished-at="2019-01-08T10:30:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRBWithoutAltnatMobile -->
        <test-method status="PASS" signature="validateRBInvalidAltnatMobile()[pri:59, instance:scripts.CartOperTest@6b9651f3]" name="validateRBInvalidAltnatMobile" duration-ms="9283" started-at="2019-01-08T10:30:36Z" finished-at="2019-01-08T10:30:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRBInvalidAltnatMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:36Z" finished-at="2019-01-08T10:30:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRBWithoutAltnatMobile status=SUCCESS method=ConsumerModel.validateRBWithoutAltnatMobile()[pri:58, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:46Z" finished-at="2019-01-08T10:30:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRBInvalidAltnatMobile status=SUCCESS method=ConsumerModel.validateRBInvalidAltnatMobile()[pri:59, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateRBWithValidData()[pri:60, instance:scripts.CartOperTest@6b9651f3]" name="validateRBWithValidData" duration-ms="6165" started-at="2019-01-08T10:30:46Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRBWithValidData -->
        <test-method status="PASS" signature="validateStockYardinCP()[pri:61, instance:scripts.CartOperTest@6b9651f3]" name="validateStockYardinCP" duration-ms="41" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStockYardinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRBWithValidData status=SUCCESS method=ConsumerModel.validateRBWithValidData()[pri:60, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStockYardinCP status=SUCCESS method=ConsumerModel.validateStockYardinCP()[pri:61, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateUnitPriceinCP()[pri:62, instance:scripts.CartOperTest@6b9651f3]" name="validateUnitPriceinCP" duration-ms="24" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnitPriceinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnitPriceinCP status=SUCCESS method=ConsumerModel.validateUnitPriceinCP()[pri:62, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateTotalQtyinCP()[pri:63, instance:scripts.CartOperTest@6b9651f3]" name="validateTotalQtyinCP" duration-ms="40" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTotalQtyinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTotalQtyinCP status=SUCCESS method=ConsumerModel.validateTotalQtyinCP()[pri:63, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateTotalPriceinCP()[pri:64, instance:scripts.CartOperTest@6b9651f3]" name="validateTotalPriceinCP" duration-ms="37" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTotalPriceinCP -->
        <test-method status="PASS" signature="validateGstinCP()[pri:65, instance:scripts.CartOperTest@6b9651f3]" name="validateGstinCP" duration-ms="38" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGstinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTotalPriceinCP status=SUCCESS method=ConsumerModel.validateTotalPriceinCP()[pri:64, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateGstinCP status=SUCCESS method=ConsumerModel.validateGstinCP()[pri:65, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validateTotalPayableinCP()[pri:66, instance:scripts.CartOperTest@6b9651f3]" name="validateTotalPayableinCP" duration-ms="40" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTotalPayableinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTotalPayableinCP status=SUCCESS method=ConsumerModel.validateTotalPayableinCP()[pri:66, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="checkReviewBookingBackward()[pri:67, instance:scripts.CartOperTest@6b9651f3]" name="checkReviewBookingBackward" duration-ms="207" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1, Mahatma Gandhi Main Road, Upper Bazar, Ranchi, Jharkhand] but found [2345678909]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1, Mahatma Gandhi Main Road, Upper Bazar, Ranchi, Jharkhand] but found [2345678909]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at scripts.ConsumerModel.checkReviewBookingBackward(ConsumerModel.java:435)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkReviewBookingBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="299" started-at="2019-01-08T10:30:52Z" finished-at="2019-01-08T10:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkReviewBookingBackward status=FAILURE method=ConsumerModel.checkReviewBookingBackward()[pri:67, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="checkalternateMobileBackward()[pri:68, instance:scripts.CartOperTest@6b9651f3]" name="checkalternateMobileBackward" duration-ms="589" started-at="2019-01-08T10:30:53Z" finished-at="2019-01-08T10:30:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2345678909] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2345678909] but found []
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at scripts.ConsumerModel.checkalternateMobileBackward(ConsumerModel.java:445)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkalternateMobileBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="404" started-at="2019-01-08T10:30:53Z" finished-at="2019-01-08T10:30:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkalternateMobileBackward status=FAILURE method=ConsumerModel.checkalternateMobileBackward()[pri:68, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2096" started-at="2019-01-08T10:30:54Z" data-provider="limit" finished-at="2019-01-08T10:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at scripts.ConsumerModel.asserCft(ConsumerModel.java:636)
at scripts.ConsumerModel.checkTotlcft(ConsumerModel.java:576)
at scripts.ConsumerModel.checkBookFormBackward(ConsumerModel.java:452)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="337" started-at="2019-01-08T10:30:56Z" finished-at="2019-01-08T10:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=FAILURE method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2092" started-at="2019-01-08T10:30:56Z" data-provider="limit" finished-at="2019-01-08T10:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:30:58Z" finished-at="2019-01-08T10:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2066" started-at="2019-01-08T10:30:58Z" data-provider="limit" finished-at="2019-01-08T10:31:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:00Z" finished-at="2019-01-08T10:31:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2080" started-at="2019-01-08T10:31:00Z" data-provider="limit" finished-at="2019-01-08T10:31:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:02Z" finished-at="2019-01-08T10:31:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2096" started-at="2019-01-08T10:31:02Z" data-provider="limit" finished-at="2019-01-08T10:31:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2108" started-at="2019-01-08T10:31:04Z" data-provider="limit" finished-at="2019-01-08T10:31:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:04Z" finished-at="2019-01-08T10:31:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:07Z" finished-at="2019-01-08T10:31:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2083" started-at="2019-01-08T10:31:07Z" data-provider="limit" finished-at="2019-01-08T10:31:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:09Z" finished-at="2019-01-08T10:31:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2076" started-at="2019-01-08T10:31:09Z" data-provider="limit" finished-at="2019-01-08T10:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:11Z" finished-at="2019-01-08T10:31:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3]" name="checkBookFormBackward" duration-ms="2084" started-at="2019-01-08T10:31:11Z" data-provider="limit" finished-at="2019-01-08T10:31:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookFormBackward -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookFormBackward status=SUCCESS method=ConsumerModel.checkBookFormBackward(java.lang.String, java.lang.String, java.lang.String)[pri:69, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="verifyTotalQTY()[pri:70, instance:scripts.CartOperTest@6b9651f3]" name="verifyTotalQTY" duration-ms="30" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTotalQTY -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTotalQTY status=SUCCESS method=ConsumerModel.verifyTotalQTY()[pri:70, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="FAIL" signature="verifyPrice()[pri:71, instance:scripts.CartOperTest@6b9651f3]" name="verifyPrice" duration-ms="72" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:442)
at scripts.ConsumerModel.verifyPrice(ConsumerModel.java:481)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrice -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="335" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrice status=FAILURE method=ConsumerModel.verifyPrice()[pri:71, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="forwardtoConfirmPage()[pri:72, instance:scripts.CartOperTest@6b9651f3]" name="forwardtoConfirmPage" duration-ms="2358" started-at="2019-01-08T10:31:13Z" finished-at="2019-01-08T10:31:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forwardtoConfirmPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:16Z" finished-at="2019-01-08T10:31:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forwardtoConfirmPage status=SUCCESS method=ConsumerModel.forwardtoConfirmPage()[pri:72, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPayment()[pri:78, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPayment" duration-ms="11686" started-at="2019-01-08T10:31:16Z" finished-at="2019-01-08T10:31:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPayment -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:27Z" finished-at="2019-01-08T10:31:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPayment status=SUCCESS method=Payment.navigateToPayment()[pri:78, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validatePaymentPrice()[pri:79, instance:scripts.CartOperTest@6b9651f3]" name="validatePaymentPrice" duration-ms="32" started-at="2019-01-08T10:31:27Z" finished-at="2019-01-08T10:31:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePaymentPrice -->
        <test-method status="PASS" signature="cancelPayment()[pri:80, instance:scripts.CartOperTest@6b9651f3]" name="cancelPayment" duration-ms="16695" started-at="2019-01-08T10:31:27Z" finished-at="2019-01-08T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelPayment -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:27Z" finished-at="2019-01-08T10:31:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePaymentPrice status=SUCCESS method=Payment.validatePaymentPrice()[pri:79, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancelPayment status=SUCCESS method=Payment.cancelPayment()[pri:80, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="paymentFail()[pri:81, instance:scripts.CartOperTest@6b9651f3]" name="paymentFail" duration-ms="58" started-at="2019-01-08T10:31:44Z" description="once payment is fail" finished-at="2019-01-08T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentFail -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentFail status=SUCCESS method=Payment.paymentFail()[pri:81, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkBookingid()[pri:82, instance:scripts.CartOperTest@6b9651f3]" name="checkBookingid" duration-ms="25" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBookingid -->
        <test-method status="PASS" signature="checkPaymentStatus()[pri:83, instance:scripts.CartOperTest@6b9651f3]" name="checkPaymentStatus" duration-ms="25" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPaymentStatus -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkBookingid status=SUCCESS method=Payment.checkBookingid()[pri:82, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPaymentStatus status=SUCCESS method=Payment.checkPaymentStatus()[pri:83, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkAddress()[pri:84, instance:scripts.CartOperTest@6b9651f3]" name="checkAddress" duration-ms="25" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAddress -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAddress status=SUCCESS method=Payment.checkAddress()[pri:84, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToHome()[pri:85, instance:scripts.CartOperTest@6b9651f3]" name="navigateToHome" duration-ms="5607" started-at="2019-01-08T10:31:44Z" finished-at="2019-01-08T10:31:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToHome -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:31:50Z" finished-at="2019-01-08T10:31:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToHome status=SUCCESS method=Payment.navigateToHome()[pri:85, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="zBookingForm()[pri:85, instance:scripts.CartOperTest@6b9651f3]" name="zBookingForm" duration-ms="20795" started-at="2019-01-08T10:31:50Z" finished-at="2019-01-08T10:32:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:11Z" finished-at="2019-01-08T10:32:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=zBookingForm status=SUCCESS method=Payment.zBookingForm()[pri:85, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="zzRes()[pri:85, instance:scripts.CartOperTest@6b9651f3]" name="zzRes" duration-ms="1203" started-at="2019-01-08T10:32:11Z" finished-at="2019-01-08T10:32:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zzRes -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:12Z" finished-at="2019-01-08T10:32:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=zzRes status=SUCCESS method=Payment.zzRes()[pri:85, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11669" started-at="2019-01-08T10:32:12Z" data-provider="linit" finished-at="2019-01-08T10:32:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:23Z" finished-at="2019-01-08T10:32:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11627" started-at="2019-01-08T10:32:23Z" data-provider="linit" finished-at="2019-01-08T10:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:35Z" finished-at="2019-01-08T10:32:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11638" started-at="2019-01-08T10:32:35Z" data-provider="linit" finished-at="2019-01-08T10:32:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:47Z" finished-at="2019-01-08T10:32:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11617" started-at="2019-01-08T10:32:47Z" data-provider="linit" finished-at="2019-01-08T10:32:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11616" started-at="2019-01-08T10:32:58Z" data-provider="linit" finished-at="2019-01-08T10:33:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:32:58Z" finished-at="2019-01-08T10:32:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11646" started-at="2019-01-08T10:33:10Z" data-provider="linit" finished-at="2019-01-08T10:33:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:33:10Z" finished-at="2019-01-08T10:33:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:33:22Z" finished-at="2019-01-08T10:33:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11674" started-at="2019-01-08T10:33:22Z" data-provider="linit" finished-at="2019-01-08T10:33:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:33:33Z" finished-at="2019-01-08T10:33:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11656" started-at="2019-01-08T10:33:33Z" data-provider="linit" finished-at="2019-01-08T10:33:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:33:45Z" finished-at="2019-01-08T10:33:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPaymentPage" duration-ms="11684" started-at="2019-01-08T10:33:45Z" data-provider="linit" finished-at="2019-01-08T10:33:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPaymentPage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:33:57Z" finished-at="2019-01-08T10:33:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPaymentPage status=SUCCESS method=Payment.navigateToPaymentPage(java.lang.String, java.lang.String, java.lang.String)[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="znavigateToPayPage()[pri:86, instance:scripts.CartOperTest@6b9651f3]" name="znavigateToPayPage" duration-ms="20109" started-at="2019-01-08T10:33:57Z" finished-at="2019-01-08T10:34:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- znavigateToPayPage -->
        <test-method status="PASS" signature="aCreditCard()[pri:87, instance:scripts.CartOperTest@6b9651f3]" name="aCreditCard" duration-ms="17535" started-at="2019-01-08T10:34:17Z" finished-at="2019-01-08T10:34:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aCreditCard -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:34:17Z" finished-at="2019-01-08T10:34:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=znavigateToPayPage status=SUCCESS method=Payment.znavigateToPayPage()[pri:86, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:34:34Z" finished-at="2019-01-08T10:34:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aCreditCard status=SUCCESS method=Payment.aCreditCard()[pri:87, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToHomePage()[pri:100, instance:scripts.CartOperTest@6b9651f3]" name="navigateToHomePage" duration-ms="2958" started-at="2019-01-08T10:34:34Z" finished-at="2019-01-08T10:34:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToHomePage -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:34:37Z" finished-at="2019-01-08T10:34:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToHomePage status=SUCCESS method=CartOperTest.navigateToHomePage()[pri:100, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3]" name="checkAddCartBtn" duration-ms="5516" started-at="2019-01-08T10:34:37Z" finished-at="2019-01-08T10:34:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAddCartBtn -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:34:43Z" finished-at="2019-01-08T10:34:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAddCartBtn status=SUCCESS method=CartOperTest.checkAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="dcheckAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3]" name="dcheckAddCartBtn" duration-ms="7232" started-at="2019-01-08T10:34:43Z" finished-at="2019-01-08T10:34:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dcheckAddCartBtn -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:34:50Z" finished-at="2019-01-08T10:34:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dcheckAddCartBtn status=SUCCESS method=CartOperTest.dcheckAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="echeckAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3]" name="echeckAddCartBtn" duration-ms="8882" started-at="2019-01-08T10:34:50Z" finished-at="2019-01-08T10:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- echeckAddCartBtn -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:34:59Z" finished-at="2019-01-08T10:34:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=echeckAddCartBtn status=SUCCESS method=CartOperTest.echeckAddCartBtn()[pri:101, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="selectDistAndStockyard()[pri:101, instance:scripts.CartOperTest@6b9651f3]" name="selectDistAndStockyard" duration-ms="13211" started-at="2019-01-08T10:34:59Z" finished-at="2019-01-08T10:35:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDistAndStockyard -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:35:12Z" finished-at="2019-01-08T10:35:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDistAndStockyard status=SUCCESS method=CartOperTest.selectDistAndStockyard()[pri:101, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1582" started-at="2019-01-08T10:35:12Z" data-provider="cart" finished-at="2019-01-08T10:35:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:14Z" finished-at="2019-01-08T10:35:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1626" started-at="2019-01-08T10:35:14Z" data-provider="cart" finished-at="2019-01-08T10:35:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:15Z" finished-at="2019-01-08T10:35:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1655" started-at="2019-01-08T10:35:15Z" data-provider="cart" finished-at="2019-01-08T10:35:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1643" started-at="2019-01-08T10:35:17Z" data-provider="cart" finished-at="2019-01-08T10:35:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:17Z" finished-at="2019-01-08T10:35:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:19Z" finished-at="2019-01-08T10:35:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1636" started-at="2019-01-08T10:35:19Z" data-provider="cart" finished-at="2019-01-08T10:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:20Z" finished-at="2019-01-08T10:35:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1641" started-at="2019-01-08T10:35:20Z" data-provider="cart" finished-at="2019-01-08T10:35:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1637" started-at="2019-01-08T10:35:22Z" data-provider="cart" finished-at="2019-01-08T10:35:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:22Z" finished-at="2019-01-08T10:35:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:23Z" finished-at="2019-01-08T10:35:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1668" started-at="2019-01-08T10:35:23Z" data-provider="cart" finished-at="2019-01-08T10:35:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:25Z" finished-at="2019-01-08T10:35:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm" duration-ms="1646" started-at="2019-01-08T10:35:25Z" data-provider="cart" finished-at="2019-01-08T10:35:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm status=SUCCESS method=CartOperTest.fillBookingForm(java.lang.String, java.lang.String, java.lang.String)[pri:102, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkQtyB()[pri:103, instance:scripts.CartOperTest@6b9651f3]" name="checkQtyB" duration-ms="65" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQtyB -->
        <test-method status="PASS" signature="checkCalculation()[pri:104, instance:scripts.CartOperTest@6b9651f3]" name="checkCalculation" duration-ms="123" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCalculation -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkQtyB status=SUCCESS method=CartOperTest.checkQtyB()[pri:103, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCalculation status=SUCCESS method=CartOperTest.checkCalculation()[pri:104, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="clickonAddToCart()[pri:105, instance:scripts.CartOperTest@6b9651f3]" name="clickonAddToCart" duration-ms="3736" started-at="2019-01-08T10:35:27Z" finished-at="2019-01-08T10:35:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickonAddToCart -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:35:31Z" finished-at="2019-01-08T10:35:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickonAddToCart status=SUCCESS method=CartOperTest.clickonAddToCart()[pri:105, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkStockyardInCart()[pri:106, instance:scripts.CartOperTest@6b9651f3]" name="checkStockyardInCart" duration-ms="2052" started-at="2019-01-08T10:35:31Z" finished-at="2019-01-08T10:35:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStockyardInCart -->
        <test-method status="PASS" signature="checkQTYInCart()[pri:107, instance:scripts.CartOperTest@6b9651f3]" name="checkQTYInCart" duration-ms="2049" started-at="2019-01-08T10:35:33Z" finished-at="2019-01-08T10:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQTYInCart -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:33Z" finished-at="2019-01-08T10:35:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockyardInCart status=SUCCESS method=CartOperTest.checkStockyardInCart()[pri:106, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:35Z" finished-at="2019-01-08T10:35:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkQTYInCart status=SUCCESS method=CartOperTest.checkQTYInCart()[pri:107, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkPriceInCart()[pri:108, instance:scripts.CartOperTest@6b9651f3]" name="checkPriceInCart" duration-ms="2022" started-at="2019-01-08T10:35:35Z" finished-at="2019-01-08T10:35:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPriceInCart -->
        <test-method status="PASS" signature="clickOnBuy()[pri:109, instance:scripts.CartOperTest@6b9651f3]" name="clickOnBuy" duration-ms="81" started-at="2019-01-08T10:35:37Z" finished-at="2019-01-08T10:35:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnBuy -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:37Z" finished-at="2019-01-08T10:35:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPriceInCart status=SUCCESS method=CartOperTest.checkPriceInCart()[pri:108, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkDestination()[pri:110, instance:scripts.CartOperTest@6b9651f3]" name="checkDestination" duration-ms="5340" started-at="2019-01-08T10:35:37Z" finished-at="2019-01-08T10:35:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDestination -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:37Z" finished-at="2019-01-08T10:35:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnBuy status=SUCCESS method=CartOperTest.clickOnBuy()[pri:109, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:35:42Z" finished-at="2019-01-08T10:35:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDestination status=SUCCESS method=CartOperTest.checkDestination()[pri:110, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkDestinationWithOutMobile()[pri:111, instance:scripts.CartOperTest@6b9651f3]" name="checkDestinationWithOutMobile" duration-ms="7747" started-at="2019-01-08T10:35:42Z" finished-at="2019-01-08T10:35:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDestinationWithOutMobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:50Z" finished-at="2019-01-08T10:35:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDestinationWithOutMobile status=SUCCESS method=CartOperTest.checkDestinationWithOutMobile()[pri:111, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkDestinationWithInvalidmobile()[pri:112, instance:scripts.CartOperTest@6b9651f3]" name="checkDestinationWithInvalidmobile" duration-ms="9014" started-at="2019-01-08T10:35:50Z" finished-at="2019-01-08T10:35:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDestinationWithInvalidmobile -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:35:59Z" finished-at="2019-01-08T10:35:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDestinationWithInvalidmobile status=SUCCESS method=CartOperTest.checkDestinationWithInvalidmobile()[pri:112, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkDestinationWithvalidmobile()[pri:113, instance:scripts.CartOperTest@6b9651f3]" name="checkDestinationWithvalidmobile" duration-ms="5952" started-at="2019-01-08T10:35:59Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDestinationWithvalidmobile -->
        <test-method status="PASS" signature="checkStockyardinCP()[pri:114, instance:scripts.CartOperTest@6b9651f3]" name="checkStockyardinCP" duration-ms="35" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStockyardinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkDestinationWithvalidmobile status=SUCCESS method=CartOperTest.checkDestinationWithvalidmobile()[pri:113, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkUnitPriceCP()[pri:115, instance:scripts.CartOperTest@6b9651f3]" name="checkUnitPriceCP" duration-ms="32" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUnitPriceCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkStockyardinCP status=SUCCESS method=CartOperTest.checkStockyardinCP()[pri:114, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkTotalQTY()[pri:116, instance:scripts.CartOperTest@6b9651f3]" name="checkTotalQTY" duration-ms="42" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTotalQTY -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkUnitPriceCP status=SUCCESS method=CartOperTest.checkUnitPriceCP()[pri:115, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTotalQTY status=SUCCESS method=CartOperTest.checkTotalQTY()[pri:116, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkTotPriceCP()[pri:117, instance:scripts.CartOperTest@6b9651f3]" name="checkTotPriceCP" duration-ms="43" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTotPriceCP -->
        <test-method status="PASS" signature="checkGSTinCP()[pri:118, instance:scripts.CartOperTest@6b9651f3]" name="checkGSTinCP" duration-ms="39" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGSTinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTotPriceCP status=SUCCESS method=CartOperTest.checkTotPriceCP()[pri:117, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkGSTinCP status=SUCCESS method=CartOperTest.checkGSTinCP()[pri:118, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkTotalPayableinCP()[pri:119, instance:scripts.CartOperTest@6b9651f3]" name="checkTotalPayableinCP" duration-ms="52" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTotalPayableinCP -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTotalPayableinCP status=SUCCESS method=CartOperTest.checkTotalPayableinCP()[pri:119, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateEazypay()[pri:120, instance:scripts.CartOperTest@6b9651f3]" name="navigateEazypay" duration-ms="10405" started-at="2019-01-08T10:36:05Z" finished-at="2019-01-08T10:36:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateEazypay -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:16Z" finished-at="2019-01-08T10:36:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateEazypay status=SUCCESS method=CartOperTest.navigateEazypay()[pri:120, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkprice()[pri:121, instance:scripts.CartOperTest@6b9651f3]" name="checkprice" duration-ms="31" started-at="2019-01-08T10:36:16Z" finished-at="2019-01-08T10:36:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkprice -->
        <test-method status="PASS" signature="validatCan()[pri:122, instance:scripts.CartOperTest@6b9651f3]" name="validatCan" duration-ms="14096" started-at="2019-01-08T10:36:16Z" finished-at="2019-01-08T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatCan -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:16Z" finished-at="2019-01-08T10:36:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkprice status=SUCCESS method=CartOperTest.checkprice()[pri:121, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatCan status=SUCCESS method=CartOperTest.validatCan()[pri:122, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkResMsg()[pri:123, instance:scripts.CartOperTest@6b9651f3]" name="checkResMsg" duration-ms="47" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResMsg -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkResMsg status=SUCCESS method=CartOperTest.checkResMsg()[pri:123, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkbookingid()[pri:124, instance:scripts.CartOperTest@6b9651f3]" name="checkbookingid" duration-ms="31" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkbookingid -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkbookingid status=SUCCESS method=CartOperTest.checkbookingid()[pri:124, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkstatus()[pri:125, instance:scripts.CartOperTest@6b9651f3]" name="checkstatus" duration-ms="39" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatus -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkstatus status=SUCCESS method=CartOperTest.checkstatus()[pri:125, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkaddress()[pri:126, instance:scripts.CartOperTest@6b9651f3]" name="checkaddress" duration-ms="9" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkaddress -->
        <test-method status="PASS" signature="navigateHm()[pri:127, instance:scripts.CartOperTest@6b9651f3]" name="navigateHm" duration-ms="4953" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateHm -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:30Z" finished-at="2019-01-08T10:36:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkaddress status=SUCCESS method=CartOperTest.checkaddress()[pri:126, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="preset()[pri:128, instance:scripts.CartOperTest@6b9651f3]" name="preset" duration-ms="18515" started-at="2019-01-08T10:36:35Z" finished-at="2019-01-08T10:36:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preset -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:35Z" finished-at="2019-01-08T10:36:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateHm status=SUCCESS method=CartOperTest.navigateHm()[pri:127, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:36:53Z" finished-at="2019-01-08T10:36:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=preset status=SUCCESS method=CartOperTest.preset()[pri:128, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11673" started-at="2019-01-08T10:36:53Z" data-provider="cartDebit" finished-at="2019-01-08T10:37:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tractor]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:37:05Z" finished-at="2019-01-08T10:37:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11608" started-at="2019-01-08T10:37:05Z" data-provider="cartDebit" finished-at="2019-01-08T10:37:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mini Haiwa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11611" started-at="2019-01-08T10:37:17Z" data-provider="cartDebit" finished-at="2019-01-08T10:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:37:17Z" finished-at="2019-01-08T10:37:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11667" started-at="2019-01-08T10:37:28Z" data-provider="cartDebit" finished-at="2019-01-08T10:37:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[450]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:37:28Z" finished-at="2019-01-08T10:37:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11596" started-at="2019-01-08T10:37:40Z" data-provider="cartDebit" finished-at="2019-01-08T10:37:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[600]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:37:40Z" finished-at="2019-01-08T10:37:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11642" started-at="2019-01-08T10:37:51Z" data-provider="cartDebit" finished-at="2019-01-08T10:38:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TruckTrailor-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[650]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:37:51Z" finished-at="2019-01-08T10:37:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:03Z" finished-at="2019-01-08T10:38:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11660" started-at="2019-01-08T10:38:03Z" data-provider="cartDebit" finished-at="2019-01-08T10:38:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[700]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:15Z" finished-at="2019-01-08T10:38:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11633" started-at="2019-01-08T10:38:15Z" data-provider="cartDebit" finished-at="2019-01-08T10:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[750]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3]" name="fillBookingForm2" duration-ms="11675" started-at="2019-01-08T10:38:26Z" data-provider="cartDebit" finished-at="2019-01-08T10:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Truck-22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[900]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBookingForm2 -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:26Z" finished-at="2019-01-08T10:38:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="checkAll()[pri:130, instance:scripts.CartOperTest@6b9651f3]" name="checkAll" duration-ms="138" started-at="2019-01-08T10:38:38Z" finished-at="2019-01-08T10:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAll -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:38Z" finished-at="2019-01-08T10:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBookingForm2 status=SUCCESS method=CartOperTest.fillBookingForm2(java.lang.String, java.lang.String, java.lang.String)[pri:129, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="testaddcart()[pri:131, instance:scripts.CartOperTest@6b9651f3]" name="testaddcart" duration-ms="4320" started-at="2019-01-08T10:38:38Z" finished-at="2019-01-08T10:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testaddcart -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:38Z" finished-at="2019-01-08T10:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAll status=SUCCESS method=CartOperTest.checkAll()[pri:130, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="testQTY()[pri:132, instance:scripts.CartOperTest@6b9651f3]" name="testQTY" duration-ms="2043" started-at="2019-01-08T10:38:43Z" finished-at="2019-01-08T10:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQTY -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:43Z" finished-at="2019-01-08T10:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testaddcart status=SUCCESS method=CartOperTest.testaddcart()[pri:131, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:45Z" finished-at="2019-01-08T10:38:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testQTY status=SUCCESS method=CartOperTest.testQTY()[pri:132, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="testPrice()[pri:132, instance:scripts.CartOperTest@6b9651f3]" name="testPrice" duration-ms="2054" started-at="2019-01-08T10:38:45Z" finished-at="2019-01-08T10:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrice -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:47Z" finished-at="2019-01-08T10:38:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPrice status=SUCCESS method=CartOperTest.testPrice()[pri:132, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="testA()[pri:133, instance:scripts.CartOperTest@6b9651f3]" name="testA" duration-ms="77" started-at="2019-01-08T10:38:47Z" finished-at="2019-01-08T10:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:47Z" finished-at="2019-01-08T10:38:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=CartOperTest.testA()[pri:133, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="RBwithoutLoca()[pri:134, instance:scripts.CartOperTest@6b9651f3]" name="RBwithoutLoca" duration-ms="5367" started-at="2019-01-08T10:38:47Z" finished-at="2019-01-08T10:38:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RBwithoutLoca -->
        <test-method status="PASS" signature="rBWithoutAltmoba()[pri:135, instance:scripts.CartOperTest@6b9651f3]" name="rBWithoutAltmoba" duration-ms="7746" started-at="2019-01-08T10:38:52Z" finished-at="2019-01-08T10:39:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rBWithoutAltmoba -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:38:52Z" finished-at="2019-01-08T10:38:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RBwithoutLoca status=SUCCESS method=CartOperTest.RBwithoutLoca()[pri:134, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:39:00Z" finished-at="2019-01-08T10:39:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rBWithoutAltmoba status=SUCCESS method=CartOperTest.rBWithoutAltmoba()[pri:135, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="rBInvalidMobilea()[pri:136, instance:scripts.CartOperTest@6b9651f3]" name="rBInvalidMobilea" duration-ms="9000" started-at="2019-01-08T10:39:00Z" finished-at="2019-01-08T10:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rBInvalidMobilea -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:09Z" finished-at="2019-01-08T10:39:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rBInvalidMobilea status=SUCCESS method=CartOperTest.rBInvalidMobilea()[pri:136, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="validatewithValidRBq()[pri:137, instance:scripts.CartOperTest@6b9651f3]" name="validatewithValidRBq" duration-ms="5933" started-at="2019-01-08T10:39:09Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatewithValidRBq -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatewithValidRBq status=SUCCESS method=CartOperTest.validatewithValidRBq()[pri:137, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="stockyardCPq()[pri:138, instance:scripts.CartOperTest@6b9651f3]" name="stockyardCPq" duration-ms="36" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stockyardCPq -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="1" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=stockyardCPq status=SUCCESS method=CartOperTest.stockyardCPq()[pri:138, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="unitPriceCPs()[pri:139, instance:scripts.CartOperTest@6b9651f3]" name="unitPriceCPs" duration-ms="25" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unitPriceCPs -->
        <test-method status="PASS" signature="totalQTYCPe()[pri:140, instance:scripts.CartOperTest@6b9651f3]" name="totalQTYCPe" duration-ms="36" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalQTYCPe -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unitPriceCPs status=SUCCESS method=CartOperTest.unitPriceCPs()[pri:139, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="totalPriceinCPq()[pri:141, instance:scripts.CartOperTest@6b9651f3]" name="totalPriceinCPq" duration-ms="35" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalPriceinCPq -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalQTYCPe status=SUCCESS method=CartOperTest.totalQTYCPe()[pri:140, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalPriceinCPq status=SUCCESS method=CartOperTest.totalPriceinCPq()[pri:141, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="gstinCPd()[pri:142, instance:scripts.CartOperTest@6b9651f3]" name="gstinCPd" duration-ms="35" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gstinCPd -->
        <test-method status="PASS" signature="totalPayableinCPg()[pri:143, instance:scripts.CartOperTest@6b9651f3]" name="totalPayableinCPg" duration-ms="36" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- totalPayableinCPg -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gstinCPd status=SUCCESS method=CartOperTest.gstinCPd()[pri:142, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=totalPayableinCPg status=SUCCESS method=CartOperTest.totalPayableinCPg()[pri:143, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="navigateToPayments()[pri:144, instance:scripts.CartOperTest@6b9651f3]" name="navigateToPayments" duration-ms="10399" started-at="2019-01-08T10:39:15Z" finished-at="2019-01-08T10:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToPayments -->
        <test-method status="PASS" signature="paymentPrices()[pri:145, instance:scripts.CartOperTest@6b9651f3]" name="paymentPrices" duration-ms="31" started-at="2019-01-08T10:39:25Z" finished-at="2019-01-08T10:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentPrices -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:25Z" finished-at="2019-01-08T10:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToPayments status=SUCCESS method=CartOperTest.navigateToPayments()[pri:144, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="creditCncl()[pri:146, instance:scripts.CartOperTest@6b9651f3]" name="creditCncl" duration-ms="10970" started-at="2019-01-08T10:39:25Z" finished-at="2019-01-08T10:39:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCncl -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:25Z" finished-at="2019-01-08T10:39:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentPrices status=SUCCESS method=CartOperTest.paymentPrices()[pri:145, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:36Z" finished-at="2019-01-08T10:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=creditCncl status=SUCCESS method=CartOperTest.creditCncl()[pri:146, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="afterCredit()[pri:147, instance:scripts.CartOperTest@6b9651f3]" name="afterCredit" duration-ms="1437" started-at="2019-01-08T10:39:36Z" finished-at="2019-01-08T10:39:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterCredit -->
        <test-method status="PASS" signature="goHome()[pri:148, instance:scripts.CartOperTest@6b9651f3]" name="goHome" duration-ms="5149" started-at="2019-01-08T10:39:38Z" finished-at="2019-01-08T10:39:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:38Z" finished-at="2019-01-08T10:39:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=afterCredit status=SUCCESS method=CartOperTest.afterCredit()[pri:147, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="failScreenShot(org.testng.ITestResult)[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="failScreenShot" is-config="true" duration-ms="0" started-at="2019-01-08T10:39:43Z" finished-at="2019-01-08T10:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goHome status=SUCCESS method=CartOperTest.goHome()[pri:148, instance:scripts.CartOperTest@6b9651f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failScreenShot -->
        <test-method status="PASS" signature="closeCon()[pri:0, instance:scripts.CartOperTest@6b9651f3]" name="closeCon" is-config="true" duration-ms="5067" started-at="2019-01-08T10:39:43Z" finished-at="2019-01-08T10:39:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeCon -->
      </class> <!-- scripts.CartOperTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
